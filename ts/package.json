{
  "name": "typeagent-root",
  "version": "0.0.1",
  "private": true,
  "description": "TypeAgent TypeScript Workspace Root",
  "keywords": [],
  "homepage": "https://github.com/microsoft/TypeAgent#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/TypeAgent.git",
    "directory": "ts"
  },
  "license": "MIT",
  "author": "Microsoft",
  "scripts": {
    "api": "pnpm -C packages/api exec npm run start",
    "build": "fluid-build . -t build",
    "check:link": "git ls-tree -r --name-only HEAD .. | grep \\.md | xargs  markdown-link-check",
    "check:policy": "node tools/scripts/repo-policy-check.mjs",
    "check:policy:fix": "node tools/scripts/repo-policy-check.mjs --fix",
    "clean": "fluid-build . -t clean",
    "cli": "pnpm -C packages/cli run start",
    "cli:dev": "pnpm -C packages/cli run start:dev",
    "elevate": "node tools/scripts/elevate.js",
    "getKeys": "node tools/scripts/getKeys.mjs",
    "knowledgeVisualizer": "pnpm -C packages/knowledgeVisualizer exec npm run start",
    "kv": "pnpm -C packages/knowledgeVisualizer exec npm run start",
    "lint": "fluid-build . -t prettier",
    "lint:fix": "pnpm run prettier:fix",
    "prettier": "prettier --check .",
    "prettier:fix": "prettier --write .",
    "rebuild": "fluid-build . -t build --rebuild",
    "regen": "pnpm -C packages/cli run regen",
    "regen:builtin": "pnpm -C packages/cli run regen:builtin",
    "shell": "pnpm -C packages/shell run dev",
    "test": "pnpm -r --no-sort --stream --workspace-concurrency=0 run test",
    "test:full": "pnpm run -r --parallel --stream test:full"
  },
  "devDependencies": {
    "@fluidframework/build-tools": "^0.35.0-247707",
    "@types/node": "^20.8.9",
    "concurrently": "^8.2.2",
    "markdown-link-check": "^3.12.2",
    "prettier": "^3.2.5"
  },
  "packageManager": "pnpm@9.15.0+sha512.76e2379760a4328ec4415815bcd6628dee727af3779aaa4c914e3944156c4299921a89f976381ee107d41f12cfa4b66681ca9c718f0668fa0831ed4c6d8ba56c",
  "engines": {
    "node": ">=18",
    "pnpm": ">=9"
  },
  "peerDependencyRules": {
    "ignoreMissing": [
      "eslint"
    ]
  }
}
